---

- hosts: all
  remote_user: ansible-node
  become: yes
  tasks:
          - name: desactivar swap
            shell: swapoff -a

          - name: eliminar swap del ficher /etc/fstab
            lineinfile:
              path: /etc/fstab
              regexp: "/dev/mapper/cs-swap      none            swap    defaults        0 0"
              state: absent

          - name: reload systemd
            shell: systemctl daemon-reload

          - name: instalar paquetes necesarios
            apt:
                name: ["curl", "apt-transport-https", "wget"]
                state: present

          - name: update apt
            shell: apt update

          - name: a単adir key
            apt_key:
              url: https://packages.cloud.google.com/apt/doc/apt-key.gpg 

          - name: a単adir repositorio
            shell: apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"

          - name: update apt
            shell: apt update

          - name: instalar modulos kubernetes
            apt:
              name: ['kubeadm', 'kubectl', 'kubelet', 'kubernetes-cni']
              state: present

          - name: restart kubelet
            command: '{{ item }}'
            with_items:
              - systemctl daemon-reload
              - systemctl restart kubelet  

          - name: abrir puertos
            shell: ufw allow 6443

          - name: a単adir key docker
            apt_key:
              url: https://download.docker.com/linux/ubuntu/gpg

          - name: a単adir repo docker
            shell: add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

          - name: update apt
            shell: apt update

          - name: instalar docker
            shell: apt install -y containerd.io docker-ce docker-ce-cli

          - name: crear directorio necesario
            shell: mkdir -p /etc/systemd/system/docker.service.d

          - name: json config file
            copy:
              src: daemon.json    
              dest: /etc/docker/daemon.json

          - name: activar docker
            shell: '{{item}}'
            with_items:
              - systemctl daemon-reload 
              - systemctl restart docker
              - systemctl enable docker     
    
          - name: abrir puertos
            shell: ufw allow 6443


- hosts: master            
  become: yes
  tasks:

          - name: iniciar kubeadm
            shell: kubeadm init --pod-network-cidr 192.169.0.0/16 --apiserver-advertise-address=192.168.1.56 --ignore-preflight-errors=all

          - name: crear join command
            become: yes
            shell: kubeadm token create --print-join-command
            register: k8sjc

          - name: guardar join command
            become: yes
            set_fact:
              kubernetes_join_command: "{{ k8sjc.stdout }}"     

          - name: conf kubernetes
            shell: '{{item}}'
            with_items:
              - mkdir -p $HOME/.kube
              - cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
              - chown $(id -u):$(id -g) $HOME/.kube/config

          - name: instalar kube-flannel
            shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

          - name: instalar operador Tigera
            command: kubectl create -f https://docs.projectcalico.org/manifests/tigera-operator.yaml

          - name: descargar fichero custom-resources
            command: wget https://docs.projectcalico.org/manifests/custom-resources.yaml
  
          - name: replace line
            lineinfile: 
              path: /home/ansible/ansible-k8s/custom-resources.yaml  
              regexp: '^.*cidr: (.*)$' 
              line: '      cidr: 192.169.0.0/16'
              backrefs: yes

          - name: instalar calico
            command: kubectl apply -f custom-resources.yaml

          - name: instalar ingress-controller
            shell: kubectl apply -f https://raw.githubusercontent.com/haproxytech/kubernetes-ingress/v1.5/deploy/haproxy-ingress.yaml
  


- hosts: worker
  become: yes
  tasks:
          - name: unirse al cluster
            command: "{{ hostvars['master']['kubernetes_join_command'] }} --ignore-preflight-errors Swap"
            
                


      
                   
                    
